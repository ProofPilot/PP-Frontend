{%  extends '::base.html.twig' %}

{% form_theme form '::fields_theme1.html.twig' %}

{% block stylesheets %}
{#             {% stylesheets filter='cssrewrite' output="assetic/css/jqueryui.css" debug=false#}
{#                 'css/jquery-ui-1.10.3/base/jquery.ui.core.min.css'#}
{#                 'css/jquery-ui-1.10.3/base/jquery.ui.theme.min.css'#}
{#                 'css/jquery-ui-1.10.3/base/jquery.ui.menu.min.css'#}
{#                 'css/jquery-ui-1.10.3/base/jquery.ui.autocomplete.min.css'#}
{#              %}#}
{#                  <link rel="stylesheet" href="{{ asset_url }}" media="screen" type="text/css"/>#}
{#              {% endstylesheets %}#}
{#             <link rel="stylesheet" href="{{ asset('css/jquery-ui-1.10.3/base/jquery-ui.min.css') }}" media="screen" type="text/css"/>#}
            <style type="text/css">
            
                .autocomplete-suggestions { border: 1px solid #999; background: #FFF; overflow: auto; }
                .autocomplete-suggestion { padding: 2px 5px; white-space: nowrap; overflow: hidden; }
                .autocomplete-selected { background: #F0F0F0; }
                .autocomplete-suggestions strong { font-weight: normal; color: #3399FF; }
            
            </style>
{%  endblock stylesheets %}


{% block javascripts %}
{#             {% javascripts output="assetic/js/jqueryui.js"  debug=false#}
{#                 'js/jquery-ui-1.10.3/jquery.ui.core.min.js'#}
{#                 'js/jquery-ui-1.10.3/jquery.ui.widget.min.js'#}
{#                 'js/jquery-ui-1.10.3/jquery.ui.menu.min.js'#}
{#                 'js/jquery-ui-1.10.3/jquery.ui.position.min.js'#}
{#                 'js/jquery-ui-1.10.3/jquery.ui.autocomplete.min.js'#}
{#             %}#}
{#                 <script src="{{ asset_url }}"></script>#}
{#             {% endjavascripts %}#}
{#             <script src="{{ asset('js/jquery-ui-1.10.3/jquery-ui.min.js') }}"></script>#}
{#             {{ form_javascript(form) }}#}
            <script src="{{ asset('js/jquery.autocomplete.min.js') }}"></script>
{% endblock javascripts %}

{% block content %}
  <div class="mobile_reg login_form">
    <div class="wrapper">
      <h1><span>{% trans from "register" %}txt_join{% endtrans %} {{ current }}/{{ steps }}:</span> {% trans from "register" %}mailing_header{% endtrans %}</h1>
      <div style="margin-bottom: 20px;">{% trans from "register" %}enter_address{% endtrans %}</div>
      <form novalidate method="post" action="{{ path('_register_mailaddress',{'id' : id, 'studyCode' : studyCode}) }}" name="mailing_address">
        <div class="loginform_left mailing_adress" style="padding-top: 0px; width: auto; float: none;">
          <div class="input_container" style="width: 44%">
            <label>{% trans from "register" %}label_firstname{% endtrans %}</label>
            {{ form_widget(form.participantFirstname, {'attr' : {'class' : 'text'}}) }}
            {{ form_errors(form.participantFirstname) }}
          </div>
          <div class="input_container" style="width: 44%">
            <label>{% trans from "register" %}label_lastname{% endtrans %}</label>
            {{ form_widget(form.participantLastname, {'attr' : {'class' : 'text'}}) }}
            {{ form_errors(form.participantLastname) }}
          </div>
          <div>
            <label>{% trans from "register" %}label_address1{% endtrans %}</label>
            {{ form_widget(form.participantAddress1, {'attr' : {'class' : 'text'}}) }}
            {{ form_errors(form.participantAddress1) }}
          </div>
          <div>
            <label>{% trans from "register" %}label_address2{% endtrans %}</label>
            {{ form_widget(form.participantAddress2, {'attr' : {'class' : 'text'}}) }}
            {{ form_errors(form.participantAddress2) }}
          </div>
          <div class="input_container" style="width: 21%">
            <label>{% trans from "register" %}label_zipcode{% endtrans %}</label>
            {{ form_widget(form.participantZipcode, {'attr' : {'class' : 'text'}}) }}
            {{ form_errors(form.participantZipcode) }}
          </div>
          <div class="input_container" style="width: 46%">
            <label>{% trans from "register" %}label_city{% endtrans %}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>
            {{ form_widget(form.city, {'attr' : {'class' : 'text'}}) }}
            {{ form_errors(form.city) }}
          </div>
          <div class="input_container" style="width: 13%">
            <label>{% trans from "register" %}label_state{% endtrans %}</label>
            {{ form_widget(form.state, {'attr' : {'class' : 'text'}}) }}
            {{ form_errors(form.state) }}
          </div>
          <div class="checkbox_placeholder">
{#             {% form_theme form 'CyclogramFrontendBundle:Form:fields.html.twig' %}#}
            {{ form_widget(form.sign) }}
            {{ form_errors(form.sign) }}
          </div>
          <span class="error">{{ form_errors(form) }}</span>
        </div>
        <div class="center_align">
            {{ form_widget(form.saveMailingAddress, {'attr':{'class':'submit'}}) }}
             {{ form_rest(form) }}
        </div>
      </form>
      <script type="text/javascript">
        $(document).ready(function(){

            var chosenCities = [];
            var cityIds = [];

            $('#mailing_address_participantZipcode').on('blur', function(){
                if(!$(this).val())
                    return;

                $.getJSON(
                        Routing.generate('_get_city_state_by_zip', {
                            'zipcode': $(this).val(), 
                            '_locale':'{{ app.request.locale }}'
                                }),
                        null,
                        function(data, textStatus, jqXHR) {
                               if($.isEmptyObject(data)) {
                                   $('#mailing_address_city').val('');
                                   $('#mailing_address_cityId').val('');
                                   $('#mailing_address_state').val('');
                                   $('#mailing_address_stateId').val('');

                               };
                               if (!(data instanceof Array)) return;
                               $('#mailing_address_city').val(data[0]['cityName']);
                               $('#mailing_address_cityId').val(data[0]['cityId']);
                               $('#mailing_address_state').val(data[0]['stateCode']);
                               $('#mailing_address_stateId').val(data[0]['stateId']);

                               chosenCities = []; cityIds = [];

                               var len = data.length;
                               for(var i=0;i<len;i++) {
                            	    chosenCities[i] = {'data': data[i]["cityId"], 'value': data[i]["cityName"]};
                            	    cityIds[i] = data[i]["cityId"];
                               }

                               var cityoptions = {
                                       lookup: chosenCities,
                                       minChars: 0,
                                       maxHeight: 150,
                                       onSelect: function(suggestion) {
                                    	    $("#mailing_address_city").val(suggestion.value);
                                    	    $("#mailing_address_cityId").val(suggestion.data);
                               	}
                               };

                               $('#mailing_address_city').autocomplete('disable');
                               $('#mailing_address_city').autocomplete('setOptions', cityoptions);
                               $('#mailing_address_city').autocomplete('enable');


                        }
                 );

            });
            
            $("#mailing_address_city").autocomplete({
                serviceUrl: Routing.generate('searchCityWithAjax', {'_locale':'{{ app.request.locale }}'}),
                minChars: 3,
                maxHeight: 150,
                onSelect: function(suggestion) {
                    $("#mailing_address_city").val(suggestion.value);
                    $("#mailing_address_cityId").val(suggestion.data);
            	}
                });
            
            $("#mailing_address_state" ).autocomplete({
            	serviceUrl: Routing.generate('searchStateWithAjax', {'_locale':'{{ app.request.locale }}'}),
                minChars: 1,
                maxHeight: 150,
            	onSelect: function(suggestion) {
            		 $("#mailing_address_state").val(suggestion.value);
                     $("#mailing_address_stateId").val(suggestion.data);
            	}
            });

            $("#mailing_address_participantZipcode").on('blur', function() {
            	$('#error').remove(); 
            	var inputVal = $(this).val();
                var zipReg = /^((\d{5}-\d{4})|\d{5})$/;
                if(!zipReg.test(inputVal)) {
                    $(this).after('<p class="error" id="error">{% trans from "register" %}txt_check_zipcode{% endtrans %}</p>');
                }});
        });
        </script> 
    </div>
  </div>
{% endblock content %}
