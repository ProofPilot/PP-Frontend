{%  extends '::dashboard.html.twig' %}

{% form_theme form '::fields_theme1.html.twig' %}

{% from '::macro.html.twig' import showonerror,hideonerror %}
{% block stylesheets %}
  <style type="text/css">
    .autocomplete-suggestions { border: 1px solid #999; background: #FFF; overflow: auto; }
    .autocomplete-suggestion { padding: 2px 5px; white-space: nowrap; overflow: hidden; }
    .autocomplete-selected { background: #F0F0F0; }
    .autocomplete-suggestions strong { font-weight: normal; color: #3399FF; }
  </style>
{%  endblock stylesheets %}
{% block javascripts %}
  <script src="{{ asset('js/jquery.autocomplete.min.js') }}"></script>
{% endblock javascripts %}

  {% block content %}
  <div class="site_container">

  {% include '::header.html.twig' %}

    <div class="panel">
      <div class="panel_left">
        {% include '::profile_info.html.twig' %}
        <div class="menu_cont">
          {{ knp_menu_render('CyclogramFrontendBundle:MenuBuilder:createSideSettingsMenu',{'template': 'CyclogramFrontendBundle:Knp:knp_side_menu.html.twig','currentClass': 'active'}) }}
        </div>
      </div>
      <div class="panel_right">
        <div class="dashboard_title shipping_information"> 
          <span class="align_to_middle">
            <h1>{% trans from "shipping_information" %}shipping_title{% endtrans %}</h1>
            <p>{% trans from "shipping_information" %}shipping_subtitle{% endtrans %}</p>
          </span> 
        </div>
        <div class="dashboard_panel">
          {% if update_data is defined %}
          <p class="notice green"><span>{% trans from "shipping_information" %}shipping_update {% endtrans %}</span></p>
          {% endif %}
          {% include 'CyclogramFrontendBundle:GeneralSettings:shipping_information_form.html.twig' %}
        </div>
      </div>
    </div>
  </div>
  <footer>
    <div class="site_container">
      <div class="footer_col_left">
        {{ knp_menu_render('CyclogramFrontendBundle:MenuBuilder:createBottomLeftMenu',{'template': 'CyclogramFrontendBundle:Knp:knp_menu.html.twig'}) }}
      </div>
      <div class="footer_col_middle"><a class="to_top" href="#"><span>ON TOP</span></a></div>
      <div class="footer_col_right">
        {{ knp_menu_render('CyclogramFrontendBundle:MenuBuilder:createBottomRightMenu',{'template': 'CyclogramFrontendBundle:Knp:knp_menu.html.twig'}) }}
      </div>
    </div>
  </footer>
  <script type="text/javascript">
    $(document).ready(function(){

        var chosenCities = [];
        var cityIds = [];

        $('#mailing_address_participantZipcode').on('blur', function(){
        if(!$(this).val())
            return;

            $.getJSON(
                Routing.generate('_get_city_state_by_zip', {
                    'zipcode': $(this).val(), 
                    '_locale':'{{ app.request.locale }}'
                }),
                null,
                function(data, textStatus, jqXHR) {
                    if($.isEmptyObject(data)) {
                        $('#mailing_address_city').val('');
                        $('#mailing_address_cityId').val('');
                        $('#mailing_address_state').val('');
                        $('#mailing_address_stateId').val('');
                    };
                    if (!(data instanceof Array)) return;
                    $('#mailing_address_city').val(data[0]['cityName']);
                    $('#mailing_address_cityId').val(data[0]['cityId']);
                    $('#mailing_address_state').val(data[0]['stateCode']);
                    $('#mailing_address_stateId').val(data[0]['stateId']);

                    chosenCities = []; cityIds = [];

                    var len = data.length;
                    for(var i=0;i<len;i++) {
                        chosenCities[i] = {'data': data[i]["cityId"], 'value': data[i]["cityName"]};
                        cityIds[i] = data[i]["cityId"];
                    }

                    var cityoptions = {
                        lookup: chosenCities,
                        minChars: 0,
                        maxHeight: 150,
                        onSelect: function(suggestion) {
                            $("#mailing_address_city").val(suggestion.value);
                            $("#mailing_address_cityId").val(suggestion.data);
                        }
                    };

                    $('#mailing_address_city').autocomplete('disable');
                    $('#mailing_address_city').autocomplete('setOptions', cityoptions);
                    $('#mailing_address_city').autocomplete('enable');

                });
            });
            
            $("#mailing_address_city").autocomplete({
                serviceUrl: Routing.generate('searchCityWithAjax', {'_locale':'{{ app.request.locale }}'}),
                minChars: 3,
                maxHeight: 150,
                onSelect: function(suggestion) {
                    $("#mailing_address_city").val(suggestion.value);
                    $("#mailing_address_cityId").val(suggestion.data);
            	}
                });
            
            $("#mailing_address_state" ).autocomplete({
            	serviceUrl: Routing.generate('searchStateWithAjax', {'_locale':'{{ app.request.locale }}'}),
                minChars: 1,
                maxHeight: 150,
            	onSelect: function(suggestion) {
            		 $("#mailing_address_state").val(suggestion.value);
                     $("#mailing_address_stateId").val(suggestion.data);
            	}
            });

            $("#mailing_address_participantZipcode").on('blur', function() {
            	$('#error').remove(); 
            	var inputVal = $(this).val();
                var zipReg = /^[0-9]\d{4}-\d{4}|[0-9]{5}$/;
                if(!zipReg.test(inputVal)) {
                    $(this).after('<p class="error" id="error">{% trans from "register" %}txt_check_zipcode{% endtrans %}</p>');
            }});
      });
  </script> 
{% endblock content %}
