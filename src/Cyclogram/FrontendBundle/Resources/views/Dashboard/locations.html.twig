<!--  insert some handlebars -->
{% javascripts output='hbs/my-handlebars-templates.js'
    '@CyclogramFrontendBundle/Resources/public/hbs/*.hbs'
%}
<script type="text/javascript" src="{{ asset_url }}"></script>
{% endjavascripts %}
<div class="mobile_reg login_form ontop wide_popup with_map">
    <div class="wrapper">
        <div class="popup_header">
            <h1>LOCATIONS</h1>
            <span>near <span id="current_location">New York, NY</span></span>
        </div>
        <div class="popup_sidebar">
            <div class="maps_search">
                    <p class="input_note">Input your locations to search</p>
                    <input id="search_map_string" type="text" name="" placeholder="Zip code or city & state, etc." class="text"/>
                    <a href="#" id="search_button" class="submit_form">SEARCH</a>
            </div>
            <div class="mobile_switcher">
                <a href="#" class="contacts active">CONTACTS</a>
                <a href="#" class="map">MAP</a> 
            </div>
            <div class="results">
                <ul>
                    {% for location in locations %}
                    <li>
                        <div class="text_wrapper">
                            <div class="text_left">
                                <h2><a href="" class="location_details">{{ location.locationName }}</a></h2>
                                <p>{{ location.locationAddress1 }}<br>{{ location.locationAddress2 }}</p>
                                <p>{{ location.siteName }}</p>
                            </div>
                            <div class="text_right">
                                <a href="#" data-marker={{ loop.index0 }} data-site={{ location.siteId }}>Select</a>
                            </div>   
                            <div class="info_box" style="display: none;">
                                <div class="box_bg">
                                    <div class="text_cont">
                                        <a href="#" class="close"></a>
                                        <h1><div>{{ location.locationName }}</div></h1>
                                        <p>{{ location.locationAddress1 }}<br>{{ location.locationAddress2 }}</p>
                                        <hr/>
                                        <div class="wrapper">
                                            <p><strong>Organization Type:</strong><br/>{{ location.locationTypeName }}</p>
                                            <p><strong>On the Web:</strong><br /><a href="{{ location.locationUrl }}" target="_blank">{{ location.locationUrl }}</a></p>
                                            <p><strong>Hours of Operation:</strong><br />{{ location.operationHours }}</p>
                                            <p>
                                                <strong>Services:</strong><br />
                                                {{ location.locationService }}
                                            </p>
                                        </div>                            
                                    </div>
                                </div>
                            </div>
                        </div>
                    </li>
                    {% endfor %}
                </ul>
            </div>
        </div>
        <div class="popup_map" id="map"></div>
        <div class="popup_apply center_align">
            <button class="submit" id="apply_site_btn" type="submit">APPLY</button>
        </div>
    </div>
</div>        
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAgFoz3VYlZpWVsuIKfplU6c0yr8VaaoMc&sensor=false"></script>
<script type="text/javascript">

/* Register handlebars templates */

    var row = Handlebars.templates['row.hbs'];
    Handlebars.registerPartial("row", row); 

    var clinicsTable = Handlebars.templates['clinicsTable.hbs'];

    $(document).ready(function(){
        function funcCustom() {
           	$(this).dialog("widget").find(".ui-dialog-titlebar").hide();
               $('<div class="modal_close_btn">Ã—</div>').appendTo($(this));
               $('.modal_close_btn, .cancel a, .btn_cancel').on('click', function(e) {
                   e.preventDefault();
                   $(this).closest('.ui-dialog-content').dialog("close");
               });
           }

        var map;
        var markers = [];
        var infoWindow;
        var locationSelect;
        var bounds;
        var content = new Array();

        function load() {
            map = new google.maps.Map(document.getElementById("map"), {
              center: new google.maps.LatLng(34.0931, -118.3783),
              zoom: 10,
              mapTypeId: 'roadmap',
              mapTypeControlOptions: {style: google.maps.MapTypeControlStyle.DROPDOWN_MENU}
            });
            infoWindow = new google.maps.InfoWindow();
            bounds = new google.maps.LatLngBounds();

            //just add all locations on first load
            {% for location in locations %}
            var latlng = new google.maps.LatLng(
               parseFloat({{ location.locationLatitude }}),
               parseFloat({{ location.locationLongitude }}));
            createMarker(latlng, '{{ location.locationName }}', '{{ location.locationAddress1 }}');
            bounds.extend(latlng);
            {% endfor %}
            
            map.fitBounds(bounds);
            if({{ locations|length}} == 0)
                map.setZoom(10);

        }

        function applyAppearances() {
            if($('.text_right a').hasClass('select_btn')) {
                $('#apply_site_btn').show();
            } else {
            	$('#apply_site_btn').hide();
            }
        }

        $('.results').on('click', 'li', function() {
            var info = $(this).find('.info_box');
            if(!info.is(":visible")) {
                info.show();
                $(this).siblings().find('.info_box').hide();
            }
        });

        $('#location').on('click', function(e) {
            e.preventDefault();
            $('#div_location').dialog({
                modal: true,
                width: 'auto',
                fluid: true,
                resizable: false,
                position: ['top',100],
                open: funcCustom
            });
            load();
        });

        $('.results').on('click', '.text_wrapper .info_box .close', function(e) {
            e.stopPropagation();
            e.preventDefault();
            $('.info_box').hide();
        });
        
        $('.results').on('click', '.text_right a', function(e) {
            e.stopPropagation();
            $(this).toggleClass('select_btn');
            var markerNum = $(this).data('marker');
            if (markerNum != undefined){
                google.maps.event.trigger(markers[markerNum], 'click');
                map.setZoom(17);
                map.panTo(markers[markerNum].position);
            }
            $(this).parents('li').siblings().find('.text_right a').removeClass('select_btn');
            applyAppearances();
        });
        
        $('.results').on('click', '.text_left a', function(e) {
            e.preventDefault();
        });
        $('#apply_site_btn').on('click', function(e) {
            e.preventDefault();
            var siteId = $('a.select_btn').data('site');
            var jqXHR = $.ajax({
                dataType: "json",
                type: "POST",
                url: Routing.generate('_locationselect_completed_ajax', {
                    studyCode: '{{ studyCode }}',
                    siteId: siteId,
                    _locale: '{{ app.request.locale }}' 
                    }
                )
            });
            jqXHR.done(function( data, textStatus, jqXHR ) {
                if(data.site != null) {
                    alert("Thank you for your choice");
                } else {
                    alert("Error joining campaign. Did you make a selection?");
                }
                window.location.replace(data.url);
            });
        });
        
        
        $('.mobile_switcher a').bind('click', function(e) {
            e.preventDefault();
            if($(this).hasClass('contacts')) {
                $('.results').show();
                $('.popup_map').hide();
            } else {
                $('.results').hide();
                $('.popup_map').show();
            }
            $(this).addClass('active');
            $(this).siblings().removeClass('active');
        });

        function searchLocations() {
            var address = $("#search_map_string").val();
            var geocoder = new google.maps.Geocoder();
            geocoder.geocode({address: address}, function(results, status) {
              if (status == google.maps.GeocoderStatus.OK) {
            	  $('#current_location').html(results[0].formatted_address);
                  var center = results[0].geometry.location;
                  searchLocationsNear(center);
              } else {
                alert(address + ' not found');
              }
            });
        }
        
        $('#search_map_string').keyup(function(e){
            if(e.keyCode == 13)
            {
                searchLocations();
            }
        });
        
        $('#search_button').on('click', function(e){
            e.preventDefault();
            searchLocations();
        });

        function searchLocationsNear(center) {
            clearLocations();

            $.ajax({
                  dataType: "text",
                  type: "POST",
                  url: Routing.generate('searchStudyLocations', {
                      lat: center.lat(), 
                      lng: center.lng(), 
                      radius: 0.2,
                      studyCode: '{{ studyCode }}', 
                      _locale: '{{ app.request.locale }}'}
                  ),
              })
              .done (function(data) {
                  var json = jQuery.parseJSON(data);
                  var markerNodes = json.length;
                  content.rows = new Array();
                  for (var i = 0; i < json.length; i++) {
                      var obj = json[i];
                      var name = obj.name;
                      var address = obj.address;
                      var distance = obj.distance;
                      var latlng = new google.maps.LatLng(
                          parseFloat(obj.lat),
                          parseFloat(obj.lng));
                      var siteId = obj.siteId;
                      var siteName = obj.siteName;

                      //createOption(name, distance, i);
                      createMarker(latlng, name, address);
                      bounds.extend(latlng);

                      content.rows.push({ 
                          location: {
                              locationName: name,
                              locationAddress1: address,
                              locationAddress2: '',
                              markerid: i,
                              siteId: siteId,
                              siteName: siteName
                          }
                      });
                  }
                  bounds.extend(new google.maps.LatLng(
                      parseFloat(center.lat()),
                      parseFloat(center.lng())));

                  map.fitBounds(bounds);
                  if(markerNodes.length == 0)
                      map.setZoom(10);

                  //replace organizations table
                  var html = clinicsTable(content);
                  $('div.results ul').html(html);
                  applyAppearances();
            });
        }

        //create Marker function
        function createMarker(latlng, name, address) {
            var html = "<b>" + name + "</b> <br/>" + address;
            var marker = new google.maps.Marker({
                 map: map,
                 position: latlng,
                 icon: '../../images/google-maps-icon-default.png'
            });
            google.maps.event.addListener(marker, 'click', function() {
                infoWindow.setContent(html);
                infoWindow.open(map, marker);
                for (var i = 0; i < markers.length; i++) {
                    markers[i].setIcon('../../images/google-maps-icon-default.png');
                }
                marker.setIcon('../../images/google-maps-icon.png');
            });
            markers.push(marker);
        }

        function clearLocations() {
            infoWindow.close();
            for (var i = 0; i < markers.length; i++) {
                markers[i].setMap(null);
            }
            markers.length = 0;
        }

    });

</script>
