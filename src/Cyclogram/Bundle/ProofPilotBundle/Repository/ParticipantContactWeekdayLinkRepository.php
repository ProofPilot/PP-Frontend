<?php
namespace Cyclogram\Bundle\ProofPilotBundle\Repository;

use Cyclogram\Bundle\ProofPilotBundle\Entity\ParticipantContactWeekdayLink;

use Cyclogram\Bundle\ProofPilotBundle\Entity\ParticipantContactTimeLink;

use Doctrine\ORM\EntityRepository;

/**
 * ParticipantContactWeekdayLinkRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ParticipantContactWeekdayLinkRepository extends EntityRepository
{
    public function getParticipantContactWeekdayLink ($participant, $weekdayId)
    {
        $query = $this->getEntityManager()
        ->createQuery("
                SELECT pcwl
                FROM CyclogramProofPilotBundle:ParticipantContactWeekdayLink pcwl
                WHERE
                pcwl.participant = :participant
                AND
                pcwl.weekdayId = :weekdayId
                ")
                ->setParameter("participant", $participant)
                ->setParameter("weekdayId", $weekdayId);
    
        $result = $query->getOneOrNullResult();
    
        return $result;
    }
    
    
    public function updateParticipantContactWeekDay ($participant, $weekdayId, $active)
    {
        $em = $this->getEntityManager();
        if(!$active) {
            //if day is unset we simply delete record from db
            $em->createQuery("
                    DELETE FROM CyclogramProofPilotBundle:ParticipantContactWeekdayLink pcwl
                    WHERE
                    pcwl.participant = :participant
                    AND
                    pcwl.weekdayId = :weekdayId
                    ")
                    ->setParameter("participant", $participant)
                    ->setParameter("weekdayId", $weekdayId)
                    ->execute();
        } else {
            //check participant-weekday links
            $weekdayLinks = $em->createQuery("
                    SELECT COUNT(pcwl)
                    FROM CyclogramProofPilotBundle:ParticipantContactWeekdayLink pcwl
                    WHERE
                    pcwl.participant = :participant
                    AND
                    pcwl.weekdayId = :weekdayId
                    ")
                    ->setParameter("participant", $participant)
                    ->setParameter("weekdayId", $weekdayId)
                    ->getSingleScalarResult();
    
            if(!$weekdayLinks) {
                $weekDayLink = new ParticipantContactWeekdayLink();
                $weekDayLink->setParticipant($participant);
                $weekDayLink->setWeekdayId($weekdayId);
                $em->persist($weekDayLink);
                $em->flush();
            } 
        }
    }
}
